#=======================================================================================================================
#MIT License
#=======================================================================================================================
[package]
name = "evo_core_crypto_dilithium"
version = "2025.4.181801"
authors = ["Mitchell Berry <foss@mitchellberry.com>"]
description = "A post-quantum cryptographic signature, evo_core_crypto version"
edition = "2018"
categories = ["cryptography"]
keywords = ["signature", "post-quantum", "signing"]
repository = "https://github.com/Argyle-Software/dilithium/"
license = "MIT OR Apache-2.0"
exclude = ["tests/KAT"]
rust-version = "1.50"
#=======================================================================================================================
[dependencies]
rand_core = { version = "0.9.3",  default-features = false }
getrandom = {version = "0.2.15", features = ["js"], optional = true }
wasm-bindgen = { version = "0.2.87", optional = true }
log = "0.4.28"

#=======================================================================================================================
[dependencies.rand]
version = "0.8.5"
features = ["getrandom"]
#=======================================================================================================================
[dev-dependencies]
pqc_core = {version = "0.3.0", features = ["load"]}
log = { version = "0.4.26" }
env_logger = { version = "0.11.8" }
criterion = { version = "0.7.0", features = ["html_reports", "async_tokio"] }
tokio = { version = "1.47.1", features = ["full"] }
faster-hex = { version = "0.10.0" }
#=======================================================================================================================
[[bench]]
name = "api"
harness = false
#=======================================================================================================================
[features]
# By default this library uses mode3, also called Dilithium3
mode2 = []
mode3 = []
mode5 = []
# Enables AES mode which uses AES-256 in counter mode instead of SHAKE
aes = []
# Produces a random signature everytime when signing the same message.
# One may want to consider randomized signatures in situations where the side channel
# attacks exploiting determinism are applicable. Another situation
# where one may want to avoid determinism is when the signer does not wish to reveal the
# message that is being signed.
random_signing = []
#=======================================================================================================================
# For compiling to wasm targets 
wasm = ["wasm-bindgen", "getrandom/js"]
#=======================================================================================================================
[lib]
crate-type = ["cdylib", "rlib"]
#=======================================================================================================================